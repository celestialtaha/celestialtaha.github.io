---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import Link from "@components/Link.astro";
import { dateRange } from "@lib/utils";
import { RESEARCH } from "@lib/constants";

// Type definition for research entry
type ResearchEntry = {
  data: {
    title: string;
    journal: string;
    publicationDate: string | Date;
    authors: string[];
    link: string;
    paperId?: string;
    pdf?: string;
    code?: string;
    demo?: string;
  };
  Content: any;
};

const news = [
  { date: "2025-04-09", text: "ðŸ“Š Going to present a poster at WSS about our upcoming research article about 'Robotic 3D Perception'." },
  { date: "2024-04-25", text: "ðŸš€ Our new article is published in the IEEE journal." },
  { date: "2023-01-28", text: "ðŸŒŒ My new survey article about 3D reconstruction is now published at Springer's AIR journal." },
  // Add more news items here
];

const research = (await getCollection('research')).sort((a, b) => {
  // Put forthcoming/in review articles first
  if (a.data.publicationDate === 'Forthcoming' || a.data.publicationDate === 'In Review') return -1;
  if (b.data.publicationDate === 'Forthcoming' || b.data.publicationDate === 'In Review') return 1;
  
  // For published articles, sort by date (newest first)
  const dateA = new Date(a.data.publicationDate);
  const dateB = new Date(b.data.publicationDate);
  return dateB.getTime() - dateA.getTime();
});

const researchWithContent = await Promise.all(
  research.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);

---

<PageLayout title={RESEARCH.TITLE} description={RESEARCH.DESCRIPTION}>
  <Container>
    <div class="space-y-12">
      <!-- Hero Section -->
      <div class="text-center py-8 border-b border-gray-200 dark:border-gray-800">
        <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">Research Publications</h1>
        <p class="text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
          Exploring the frontiers of computer vision, robotics, and artificial intelligence.
        </p>
      </div>

      <!-- News Section -->
      <div class="bg-gray-50 dark:bg-gray-900/50 rounded-xl p-6 shadow-sm">
        <div class="font-bold text-gray-900 dark:text-white text-2xl mb-4 flex items-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
          </svg>
          Latest News
        </div>
        <ul class="space-y-3">
          {
            news.map((item) => (
              <li class="news-item flex items-start p-3 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800/50 transition-colors">
                <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-br from-blue-400 to-indigo-600 rounded-lg flex items-center justify-center text-white mr-4">
                  <div class="text-xs font-medium">{new Date(item.date).toLocaleDateString('en-US', {month: 'short'})}</div>
                  <div class="text-lg font-bold">{new Date(item.date).getDate()}</div>
                </div>
                <div>
                  <div class="text-sm text-gray-900 dark:text-gray-200">{item.text}</div>
                  <div class="text-xs text-gray-500 mt-1">{item.date}</div>
                </div>
              </li>
            ))
          }
        </ul>
      </div>
      
      <!-- Research Publications Section -->
      <div class="space-y-6">
        <div class="font-bold text-2xl text-gray-900 dark:text-white flex items-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
          </svg>
          Publications
        </div>
        <div class="grid grid-cols-1 gap-6">
          { 
            researchWithContent.map((entry: ResearchEntry, index: number) => (
              <div class="publication-card bg-white dark:bg-gray-800/60 rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700">
                <div class="p-5">
                  <div class="flex items-center gap-2 mb-3">
                    {(entry.data.publicationDate === 'Forthcoming' || entry.data.publicationDate === 'In Review') && 
                      <div class="forthcoming-badge" title={entry.data.publicationDate as string}>
                        <span class="relative flex h-3 w-3">
                          <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-blue-400 opacity-75"></span>
                          <span class="relative inline-flex rounded-full h-3 w-3 bg-gradient-to-r from-blue-500 to-purple-500"></span>
                        </span>
                      </div>
                    }
                    <Link href={entry.data.link}>
                      <span class="text-lg font-bold hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                        {entry.data.title}
                      </span>
                    </Link>
                  </div>
                  
                  <div class="text-sm text-gray-700 dark:text-gray-300 mb-2">
                    {entry.data.authors.join(', ')}
                  </div>
                  
                  <div class="flex flex-wrap items-center text-xs text-gray-500 dark:text-gray-400 mb-3 gap-2">
                    <span class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">
                      {entry.data.journal}
                    </span>
                    <span class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">
                      {entry.data.publicationDate !== 'Forthcoming' && entry.data.publicationDate !== 'In Review' 
                        ? new Date(entry.data.publicationDate).toLocaleDateString('en-US', {year: 'numeric', month: 'short'})
                        : 'Forthcoming'}
                    </span>
                  </div>
                  
                  <div class="prose prose-sm dark:prose-invert mt-3 max-w-none text-gray-600 dark:text-gray-400">
                    <entry.Content />
                  </div>
                  
                  <div class="mt-4 flex space-x-2">
                    {entry.data.pdf && (
                      <a href={entry.data.pdf} class="inline-flex items-center text-xs font-medium text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-300">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
                        </svg>
                        PDF
                      </a>
                    )}
                    {entry.data.code && (
                      <a href={entry.data.code} class="inline-flex items-center text-xs font-medium text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                        </svg>
                        Code
                      </a>
                    )}
                    {entry.data.demo && (
                      <a href={entry.data.demo} class="inline-flex items-center text-xs font-medium text-green-600 dark:text-green-400 hover:text-green-800 dark:hover:text-green-300">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        Demo
                      </a>
                    )}
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </Container>
</PageLayout>

<style>
  .publication-card {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeUp 0.6s ease forwards;
  }
  
  @keyframes fadeUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .publication-card:nth-child(1) { animation-delay: 0.1s; }
  .publication-card:nth-child(2) { animation-delay: 0.2s; }
  .publication-card:nth-child(3) { animation-delay: 0.3s; }
  .publication-card:nth-child(4) { animation-delay: 0.4s; }
  .publication-card:nth-child(5) { animation-delay: 0.5s; }
  .publication-card:nth-child(6) { animation-delay: 0.6s; }
  
  .news-item {
    opacity: 0;
    transform: translateX(-10px);
    animation: fadeIn 0.5s ease forwards;
  }
  
  @keyframes fadeIn {
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  .news-item:nth-child(1) { animation-delay: 0.1s; }
  .news-item:nth-child(2) { animation-delay: 0.2s; }
  .news-item:nth-child(3) { animation-delay: 0.3s; }
  
  .forthcoming-badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
</style>
