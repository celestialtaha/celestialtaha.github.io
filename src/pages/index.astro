---
import Layout from "@layouts/Layout.astro";
import { SITE, HOME, SOCIALS } from "@consts";
import { getCollection } from "astro:content";

const blog = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_POSTS_ON_HOMEPAGE);

// Get featured research
const featuredResearch = (await getCollection('research'))
  .sort((a, b) => {
    // Put forthcoming/in review articles first
    if (a.data.publicationDate === 'Forthcoming' || a.data.publicationDate === 'In Review') return -1;
    if (b.data.publicationDate === 'Forthcoming' || b.data.publicationDate === 'In Review') return 1;
    
    // For published articles, sort by date (newest first)
    const dateA = new Date(a.data.publicationDate);
    const dateB = new Date(b.data.publicationDate);
    return dateB.getTime() - dateA.getTime();
  })
  .slice(0, 2);

// Skills for typewriter effect
const skills = [
  "Data Scientist",
  "Generative AI Engineer",
  "Backend Developer",
  "Researcher",
  "ML Engineer"
];
---

<script>
  // Function to initialize animations and interactive elements
  function initializePage() {
    // Show More/Less buttons
    document.querySelectorAll('.show-more-button').forEach(button => {
      button.addEventListener('click', (event) => {
        const target = event.target as HTMLElement;
        const description = target.previousElementSibling;

        if (description && description.classList) {
          description.classList.toggle('line-clamp-3');
          description.classList.toggle('line-clamp-none');
          
          if (target.textContent?.includes('Show More')) {
            target.textContent = 'Show Less';
          } else {
            target.textContent = 'Show More';
          }
        }
      });
    });

    // Initialize scroll animations with optimized options
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.remove('opacity-0', 'translate-y-8');
          observer.unobserve(entry.target);
        }
      });
    }, { 
      threshold: 0.1,
      rootMargin: '100px' // Preload elements before they come into view
    });

    document.querySelectorAll('.animate-on-scroll').forEach(el => {
      observer.observe(el);
    });

    // Show hero section
    const heroSection = document.querySelector('.hero-section');
    if (heroSection) {
      setTimeout(() => {
        heroSection.classList.remove('opacity-0', 'translate-y-8');
      }, 100);
    }

    // Initialize typewriter effect
    initTypewriter();
  }
  
  // Typewriter effect
  function initTypewriter() {
    const typewriterElement = document.getElementById('typewriter-text');
    if (!typewriterElement) return;
    
    const skillsAttr = typewriterElement.getAttribute('data-skills');
    if (!skillsAttr) return;
    
    const skills = JSON.parse(skillsAttr);
    if (!skills || !skills.length) return;
    
    let currentSkillIndex = 0;
    let currentCharIndex = 0;
    let isDeleting = false;
    let typingSpeed = 100;
    
    function type() {
      if (!typewriterElement) return; // Additional null check
      
      const currentSkill = skills[currentSkillIndex];
      
      if (isDeleting) {
        typewriterElement.textContent = currentSkill.substring(0, currentCharIndex - 1);
        currentCharIndex--;
        typingSpeed = 50;
      } else {
        typewriterElement.textContent = currentSkill.substring(0, currentCharIndex + 1);
        currentCharIndex++;
        typingSpeed = 100;
      }
      
      // If word is complete
      if (!isDeleting && currentCharIndex === currentSkill.length) {
        isDeleting = true;
        typingSpeed = 1500; // Pause at the end
      } 
      // If deletion is complete
      else if (isDeleting && currentCharIndex === 0) {
        isDeleting = false;
        currentSkillIndex = (currentSkillIndex + 1) % skills.length;
        typingSpeed = 500; // Pause before typing next word
      }
      
      setTimeout(type, typingSpeed);
    }
    
    // Start the typewriter effect
    setTimeout(type, 1000);
  }
  
  // For view transitions API (if supported)
  document.addEventListener('astro:page-load', initializePage);
  
  // Mouse-tracking gradient effect with throttling
  const aboutSection = document.getElementById('about-section');
  if (aboutSection) {
    // Use requestAnimationFrame for smoother performance
    let ticking = false;
    let lastMouseX = 0;
    let lastMouseY = 0;
    
    aboutSection.addEventListener('mousemove', (e) => {
      lastMouseX = e.clientX;
      lastMouseY = e.clientY;
      
      if (!ticking) {
        window.requestAnimationFrame(() => {
          updateGradient(aboutSection, lastMouseX, lastMouseY);
          ticking = false;
        });
        ticking = true;
      }
    });
    
    // Reset gradient when mouse leaves
    aboutSection.addEventListener('mouseleave', () => {
      aboutSection.style.background = '';
    });
  }
  
  // Mouse-tracking gradient effect for Connect section with throttling
  const connectSection = document.getElementById('connect-section');
  if (connectSection) {
    // Use requestAnimationFrame for smoother performance
    let ticking = false;
    let lastMouseX = 0;
    let lastMouseY = 0;
    
    connectSection.addEventListener('mousemove', (e) => {
      lastMouseX = e.clientX;
      lastMouseY = e.clientY;
      
      if (!ticking) {
        window.requestAnimationFrame(() => {
          updateGradient(connectSection, lastMouseX, lastMouseY);
          ticking = false;
        });
        ticking = true;
      }
    });
    
    // Reset gradient when mouse leaves
    connectSection.addEventListener('mouseleave', () => {
      connectSection.style.background = '';
    });
  }
  
  // Shared gradient update function
  function updateGradient(element: HTMLElement, mouseX: number, mouseY: number): void {
    const rect = element.getBoundingClientRect();
    
    // Calculate mouse position relative to the element (0-100%)
    const x = ((mouseX - rect.left) / rect.width) * 100;
    const y = ((mouseY - rect.top) / rect.height) * 100;
    
    // Create gradient based on mouse position with increased brightness
    const isDarkMode = document.documentElement.classList.contains('dark');
    
    // Use simplified gradient with fewer color stops
    let color1, color2;
    
    if (element.id === 'about-section') {
      color1 = isDarkMode ? 'rgba(59, 130, 246, 0.6)' : 'rgba(59, 130, 246, 0.3)';
      color2 = isDarkMode ? 'rgba(147, 51, 234, 0.6)' : 'rgba(147, 51, 234, 0.3)';
    } else {
      color1 = isDarkMode ? 'rgba(79, 70, 229, 0.6)' : 'rgba(79, 70, 229, 0.3)';
      color2 = isDarkMode ? 'rgba(219, 39, 119, 0.5)' : 'rgba(219, 39, 119, 0.25)';
    }
    
    // Apply simplified gradient with mouse position
    element.style.background = `radial-gradient(circle at ${x}% ${y}%, ${color1} 0%, ${color2} 100%)`;
  }
</script>

<Layout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <div class="mx-auto max-w-screen-lg px-3">
    <div class="space-y-16 py-8">
      <!-- Hero Section -->
      <section class="hero-section relative flex flex-col md:flex-row items-center md:items-start gap-8 opacity-0 transition-all duration-700 ease-out transform translate-y-8 overflow-hidden rounded-3xl p-8 bg-gradient-to-br from-white/80 to-white/50 dark:from-gray-900/80 dark:to-gray-900/50 backdrop-blur-md border border-gray-200 dark:border-gray-800 shadow-xl">
        <!-- Animated gradient background -->
        <div class="animated-gradient absolute inset-0 z-0 opacity-20"></div>
        
        <div class="w-full md:w-1/3 flex justify-center md:justify-center relative z-10">
          <div class="relative mx-auto">
            <div class="absolute -inset-1 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full blur opacity-30 animate-pulse"></div>
            <img
              src="/images/profile.jpg"
              alt="Taha's Profile Picture"
              class="relative w-48 h-48 object-cover rounded-full border-4 border-white dark:border-gray-800 shadow-lg transition-transform duration-500 hover:scale-105"
            />
          </div>
        </div>
        
        <div class="w-full md:w-2/3 space-y-6 text-center md:text-left relative z-10">
          <h1 class="text-4xl md:text-5xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-400 dark:to-purple-400 text-transparent bg-clip-text">
            Hi, I'm Taha <span class="wave-emoji">üëãüèª</span>
          </h1>
          
          <div class="prose prose-lg dark:prose-invert max-w-none">
            <p class="text-xl text-gray-700 dark:text-gray-300 flex flex-wrap items-center gap-2">
              I'm a <span id="typewriter-text" data-skills={JSON.stringify(skills)} class="text-blue-600 dark:text-blue-400 font-semibold"></span>
              <span class="inline-block w-1 h-6 bg-blue-500 animate-blink"></span>
            </p>
            <p class="text-gray-600 dark:text-gray-400">
              I build intelligent systems and AI-powered products that solve real-world problems.
              Currently focused on developing agent-based generative AI applications.
            </p>
          </div>
          
          <div class="flex flex-wrap gap-3 justify-center md:justify-start">
            <a href="/blog" class="px-5 py-2.5 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-full font-medium transition-all shadow-md hover:shadow-lg hover:-translate-y-1">
              Blog Posts
            </a>
            <a href="/research" class="px-5 py-2.5 bg-white dark:bg-gray-800 text-gray-800 dark:text-white border border-gray-300 dark:border-gray-700 rounded-full font-medium hover:bg-gray-100 dark:hover:bg-gray-700 transition-all hover:-translate-y-1 hover:shadow-md">
              View Research
            </a>
            <a href="/work" class="px-5 py-2.5 bg-white dark:bg-gray-800 text-gray-800 dark:text-white border border-gray-300 dark:border-gray-700 rounded-full font-medium hover:bg-gray-100 dark:hover:bg-gray-700 transition-all hover:-translate-y-1 hover:shadow-md">
              Experience
            </a>
          </div>
        </div>
      </section>
      
      <!-- About Section -->
      <section id="about-section" class="animate-on-scroll opacity-0 transition-all duration-700 ease-out transform translate-y-8 overflow-hidden rounded-3xl p-8 bg-gradient-to-br from-white/90 to-white/70 dark:from-gray-900/90 dark:to-gray-900/70 backdrop-blur-md border border-gray-200 dark:border-gray-800 shadow-lg mouse-gradient">
        <div class="relative">
          <!-- Subtle background elements -->
          <div class="absolute top-0 right-0 w-64 h-64 bg-blue-500/10 dark:bg-blue-500/20 rounded-full filter blur-3xl -z-10 transform translate-x-1/2 -translate-y-1/2"></div>
          <div class="absolute bottom-0 left-0 w-64 h-64 bg-purple-500/10 dark:bg-purple-500/20 rounded-full filter blur-3xl -z-10 transform -translate-x-1/2 translate-y-1/2"></div>
          
          <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-6 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
            </svg>
            About Me
          </h2>
          
          <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
            <!-- Bio Column -->
            <div class="md:col-span-2 space-y-6">
              <div class="prose prose-lg dark:prose-invert max-w-none">
                <p class="text-gray-700 dark:text-gray-300 leading-relaxed">
                  I'm a passionate technologist with expertise in AI and machine learning, focused on building intelligent systems that solve real-world problems. My background spans data science, generative AI, and backend development. Currently, I'm working on agent-based generative AI applications that push the boundaries of what's possible with today's technology. I believe in creating AI that augments human capabilities rather than replacing them.
                </p>
              </div>
              
              <!-- Current Focus -->
              <div class="bg-white/50 dark:bg-gray-800/50 rounded-xl p-5 shadow-sm border border-gray-100 dark:border-gray-700 floating-card-medium">
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-3 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                  </svg>
                  Current Focus
                </h3>
                <ul class="space-y-2">
                  <li class="flex items-start">
                    <span class="text-blue-500 mr-2">üî≠</span>
                    <span class="text-gray-700 dark:text-gray-300">Developing agent-based generative AI products that solve complex problems</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-purple-500 mr-2">üß†</span>
                    <span class="text-gray-700 dark:text-gray-300">Researching advanced techniques in multi-agent systems and LLM reasoning</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-indigo-500 mr-2">ü§ù</span>
                    <span class="text-gray-700 dark:text-gray-300">Open to collaborations on innovative Generative AI projects</span>
                  </li>
                </ul>
              </div>
            </div>
            
            <!-- Connect Column -->
            <div class="space-y-6">
              <!-- Skills Tags -->
              <div class="bg-white/50 dark:bg-gray-800/50 rounded-xl p-5 shadow-sm border border-gray-100 dark:border-gray-700 floating-card">
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-3 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
                  </svg>
                  Core Skills
                </h3>
                <div class="flex flex-wrap gap-2">
                  <span class="px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 rounded-full text-sm">Generative AI</span>
                  <span class="px-3 py-1 bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-300 rounded-full text-sm">LLM Systems</span>
                  <span class="px-3 py-1 bg-indigo-100 dark:bg-indigo-900/30 text-indigo-800 dark:text-indigo-300 rounded-full text-sm">Python</span>
                  <span class="px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 rounded-full text-sm">Data Science</span>
                  <span class="px-3 py-1 bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-300 rounded-full text-sm">Machine Learning</span>
                </div>
              </div>
              
              <!-- Connect -->
              <div class="bg-white/50 dark:bg-gray-800/50 rounded-xl p-5 shadow-sm border border-gray-100 dark:border-gray-700 floating-card-slow">
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-3 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                  </svg>
                  Connect & Learn
                </h3>
                <ul class="space-y-3">
                  <li>
                    <a href="https://medium.com/@tahasamavati" class="flex items-center group">
                      <span class="flex items-center justify-center w-10 h-10 rounded-full bg-gray-100 dark:bg-gray-700 group-hover:bg-blue-100 dark:group-hover:bg-blue-900/30 transition-colors mr-3">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-600 dark:text-gray-300 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M13.54 12a6.8 6.8 0 01-6.77 6.82A6.8 6.8 0 010 12a6.8 6.8 0 016.77-6.82A6.8 6.8 0 0113.54 12zM20.96 12c0 3.54-1.51 6.42-3.38 6.42-1.87 0-3.39-2.88-3.39-6.42s1.52-6.42 3.39-6.42 3.38 2.88 3.38 6.42M24 12c0 3.17-.53 5.75-1.19 5.75-.66 0-1.19-2.58-1.19-5.75s.53-5.75 1.19-5.75S24 8.83 24 12z"/>
                        </svg>
                      </span>
                      <span class="text-gray-700 dark:text-gray-300 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">Read my articles on Medium</span>
                    </a>
                  </li>
                  <li>
                    <a href="https://t.me/ai_times_py" class="flex items-center group">
                      <span class="flex items-center justify-center w-10 h-10 rounded-full bg-gray-100 dark:bg-gray-700 group-hover:bg-blue-100 dark:group-hover:bg-blue-900/30 transition-colors mr-3">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-600 dark:text-gray-300 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                          <path d="M11.955 4.05a8.1 8.1 0 0 1 0 14.12M21.314 9l-6.248 6.248-3.536-3.536L12 13.569l4.838 4.838L21.314 9z"/>
                        </svg>
                      </span>
                      <span class="text-gray-700 dark:text-gray-300 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">Join my AI news Telegram channel</span>
                    </a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </section>
      
      <!-- Latest Blog Posts -->
      <section class="animate-on-scroll opacity-0 transition-all duration-700 ease-out transform translate-y-8 space-y-6">
        <div class="flex flex-wrap items-center justify-between gap-y-2">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
            </svg>
            Latest Posts
          </h2>
          <a href="/blog" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">See all blog posts</a>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {blog.map((post) => (
            <div class="bg-white dark:bg-gray-800/60 rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700">
              <a href={`/blog/${post.slug}`} class="block p-6 hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors">
                <h3 class="text-lg font-bold text-gray-900 dark:text-white mb-2 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                  {post.data.title}
                </h3>
                <p class="text-gray-600 dark:text-gray-400 text-sm mb-3 line-clamp-2">
                  {post.data.description}
                </p>
                <div class="flex items-center text-xs text-gray-500 dark:text-gray-400">
                  <span class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">
                    {post.data.date.toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: 'numeric'})}
                  </span>
                </div>
              </a>
            </div>
          ))}
        </div>
      </section>
      
      <!-- Featured Research -->
      <section class="animate-on-scroll opacity-0 transition-all duration-700 ease-out transform translate-y-8 space-y-6">
        <div class="flex flex-wrap items-center justify-between gap-y-2">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
            </svg>
            Featured Research
          </h2>
          <a href="/research" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">See all research</a>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {featuredResearch.map((research) => (
            <div class="bg-white dark:bg-gray-800/60 rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700 p-5">
              <div class="flex items-center gap-2 mb-3">
                {(research.data.publicationDate === 'Forthcoming' || research.data.publicationDate === 'In Review') && 
                  <div title={research.data.publicationDate}>
                    <span class="relative flex h-3 w-3">
                      <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-blue-400 opacity-75"></span>
                      <span class="relative inline-flex rounded-full h-3 w-3 bg-gradient-to-r from-blue-500 to-purple-500"></span>
                    </span>
                  </div>
                }
                <a href={research.data.link} class="text-lg font-bold hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                  {research.data.title}
                </a>
              </div>
              
              <div class="text-sm text-gray-700 dark:text-gray-300 mb-2">
                {research.data.authors.join(', ')}
              </div>
              
              <div class="flex flex-wrap items-center text-xs text-gray-500 dark:text-gray-400 mb-3 gap-2">
                <span class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">
                  {research.data.journal}
                </span>
                <span class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">
                  {research.data.publicationDate !== 'Forthcoming' && research.data.publicationDate !== 'In Review' 
                    ? new Date(research.data.publicationDate).toLocaleDateString('en-US', {year: 'numeric', month: 'short'})
                    : 'Forthcoming'}
                </span>
              </div>
            </div>
          ))}
        </div>
      </section>
      
      <!-- Connect Section -->
      <section id="connect-section" class="animate-on-scroll opacity-0 transition-all duration-700 ease-out transform translate-y-8 overflow-hidden rounded-3xl p-8 bg-gradient-to-br from-indigo-500/10 to-purple-600/10 dark:from-indigo-500/20 dark:to-purple-600/20 backdrop-blur-md border border-indigo-200/50 dark:border-indigo-800/50 shadow-lg">
        <div class="relative">
          <!-- Animated background elements -->
          <div class="absolute top-0 right-0 w-64 h-64 bg-blue-500/10 dark:bg-blue-500/20 rounded-full filter blur-3xl -z-10 transform translate-x-1/2 -translate-y-1/2 pulse-animation"></div>
          <div class="absolute bottom-0 left-0 w-64 h-64 bg-purple-500/10 dark:bg-purple-500/20 rounded-full filter blur-3xl -z-10 transform -translate-x-1/2 translate-y-1/2 pulse-animation-slow"></div>
          <div class="absolute top-1/2 left-1/2 w-96 h-96 bg-indigo-500/5 dark:bg-indigo-500/10 rounded-full filter blur-3xl -z-10 transform -translate-x-1/2 -translate-y-1/2 pulse-animation-medium"></div>
          
          <div class="text-center mb-8">
            <h2 class="text-3xl font-bold mb-2 inline-block">
              <span class="bg-gradient-to-r from-indigo-600 to-purple-600 dark:from-indigo-400 dark:to-purple-400 text-transparent bg-clip-text">Let's Connect</span>
            </h2>
            <p class="text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">I'm always open to discussing new projects, creative ideas, or opportunities to be part of your vision.</p>
          </div>
          
          <div class="grid grid-cols-2 sm:grid-cols-4 gap-4">
            {SOCIALS.map((SOCIAL) => (
              <div class="connect-card aspect-square max-w-[140px] mx-auto w-full">
                <a
                  href={SOCIAL.HREF}
                  target="_blank"
                  rel="noopener noreferrer"
                  aria-label={`${SITE.TITLE} on ${SOCIAL.NAME}`}
                  class="flex flex-col items-center gap-2 px-3 py-3 bg-white/80 dark:bg-gray-800/80 rounded-xl border border-gray-200/80 dark:border-gray-700/80 hover:border-indigo-300 dark:hover:border-indigo-700 transition-all hover:shadow-xl group w-full h-full justify-center relative overflow-hidden"
                >
                  <div class="connect-icon-wrapper">
                    <div class="w-10 h-10 flex items-center justify-center bg-gradient-to-br from-indigo-100 to-purple-100 dark:from-indigo-900/40 dark:to-purple-900/40 rounded-full transition-all duration-300 group-hover:scale-110">
                      <div class="w-6 h-6 flex items-center justify-center text-gray-600 dark:text-gray-300 group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-all duration-300">
                        <img 
                          src={SOCIAL.ICON} 
                          alt={`${SOCIAL.NAME} logo`}
                          class="w-5 h-5 group-hover:scale-110 transition-all duration-300"
                        />
                      </div>
                    </div>
                  </div>
                  <span class="font-medium text-gray-800 dark:text-white text-base group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-all duration-300">{SOCIAL.NAME}</span>
                  <span class="text-xs text-gray-500 dark:text-gray-400">{SOCIAL.DESCRIPTION || SOCIAL.NAME}</span>
                </a>
              </div>
            ))}
            
            <div class="connect-card aspect-square max-w-[140px] mx-auto w-full">
              <a
                href={`mailto:${SITE.EMAIL}`}
                aria-label={`Email ${SITE.TITLE}`}
                class="flex flex-col items-center gap-2 px-3 py-3 bg-white/80 dark:bg-gray-800/80 rounded-xl border border-gray-200/80 dark:border-gray-700/80 hover:border-indigo-300 dark:hover:border-indigo-700 transition-all hover:shadow-xl group w-full h-full justify-center relative overflow-hidden"
              >
                <div class="connect-icon-wrapper">
                  <div class="w-10 h-10 flex items-center justify-center bg-gradient-to-br from-indigo-100 to-purple-100 dark:from-indigo-900/40 dark:to-purple-900/40 rounded-full transition-all duration-300 group-hover:scale-110">
                    <div class="w-6 h-6 flex items-center justify-center text-gray-600 dark:text-gray-300 group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-all duration-300">
                      <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                      </svg>
                    </div>
                  </div>
                </div>
                <span class="font-medium text-gray-800 dark:text-white text-base group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-all duration-300">Email Me</span>
                <span class="text-xs text-gray-500 dark:text-gray-400">{SITE.EMAIL}</span>
              </a>
            </div>
          </div>
        </div>
      </section>
    </div>
  </div>
</Layout>

<style>
  .line-clamp-none {
    -webkit-line-clamp: unset !important;
  }
  
  .wave-emoji {
    display: inline-block;
    animation: wave 2.5s infinite;
    transform-origin: 70% 70%;
  }
  
  @keyframes wave {
    0% { transform: rotate(0deg); }
    10% { transform: rotate(14deg); }
    20% { transform: rotate(-8deg); }
    30% { transform: rotate(14deg); }
    40% { transform: rotate(-4deg); }
    50% { transform: rotate(10deg); }
    60% { transform: rotate(0deg); }
    100% { transform: rotate(0deg); }
  }
  
  .animated-gradient {
    background: linear-gradient(45deg, #3b82f6, #8b5cf6, #ec4899);
    background-size: 300% 300%;
    animation: gradient 20s ease infinite;
    border-radius: inherit;
    filter: blur(24px);
    margin: -20px;
    inset: -20px;
    will-change: background-position;
  }
  
  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
  
  @keyframes pulse {
    0% {
      opacity: 0.15;
      transform: scale(0.9) translate(0, 0);
    }
    50% {
      opacity: 0.25;
      transform: scale(1.05) translate(5%, 5%);
    }
    100% {
      opacity: 0.15;
      transform: scale(0.9) translate(0, 0);
    }
  }
  
  .animate-blink {
    animation: blink 1s step-end infinite;
  }
  
  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }
  
  .hero-section {
    position: relative;
    z-index: 1;
  }
  
  a.hover\:-translate-y-1:hover {
    transform: translateY(-4px);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .gradient-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, #3b82f6, #8b5cf6, #ec4899);
    opacity: 0.2;
    z-index: -1;
  }
  
  .hero-gradient {
    transition: background-position 0.3s ease-out;
    background-size: 300% 300%;
    background-position: 0% 50%;
    will-change: background-position;
  }
  
  .hero-gradient:hover {
    background-position: 100% 50%;
  }
  
  .hero-gradient {
    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
    background-size: 300% 300%;
    animation: gradient 20s ease infinite;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
    will-change: transform;
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }
  
  .animate-float-slow {
    animation: float-slow 8s ease-in-out infinite;
    will-change: transform;
  }
  
  @keyframes float-slow {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-15px);
    }
  }
  
  .bg-blur {
    position: absolute;
    width: 150px;
    height: 150px;
    border-radius: 50%;
    filter: blur(40px);
    opacity: 0.2;
    z-index: -1;
  }
  
  .mouse-gradient {
    transition: background 0.3s ease;
  }
  
  /* Floating card animations */
  .floating-card {
    animation: floating 4s ease-in-out infinite;
    transition: all 0.3s ease;
    will-change: transform;
  }
  
  .floating-card:hover {
    animation-play-state: paused;
    transform: translateY(0);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }
  
  .floating-card-slow {
    animation: floating-slow 6s ease-in-out infinite;
    transition: all 0.3s ease;
    will-change: transform;
  }
  
  .floating-card-slow:hover {
    animation-play-state: paused;
    transform: translateY(0);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }
  
  @keyframes floating {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }
  
  @keyframes floating-slow {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-8px);
    }
  }
  
  .floating-card-medium {
    animation: floating-medium 5s ease-in-out infinite;
    transition: all 0.3s ease;
    will-change: transform;
  }
  
  .floating-card-medium:hover {
    animation-play-state: paused;
    transform: translateY(0);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }
  
  @keyframes floating-medium {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-12px);
    }
  }
  
  /* Connect section animations */
  .connect-card {
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateY(0) scale(1);
    z-index: 1;
  }
  
  .connect-card.card-active {
    transform: translateY(-10px) scale(1.02);
    z-index: 2;
  }
  
  .connect-icon-wrapper::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, rgba(79, 70, 229, 0) 0%, rgba(79, 70, 229, 0.1) 100%);
    border-radius: inherit;
    opacity: 0;
    transition: opacity 0.5s ease;
  }
  
  .connect-card:hover .connect-icon-wrapper::before {
    opacity: 1;
  }
  
  .pulse-animation {
    animation: pulse 8s ease-in-out infinite alternate;
    will-change: transform, opacity;
  }
  
  .pulse-animation-slow {
    animation: pulse 12s ease-in-out infinite alternate-reverse;
    will-change: transform, opacity;
  }
  
  .pulse-animation-medium {
    animation: pulse 10s ease-in-out infinite alternate;
    will-change: transform, opacity;
  }
  
  @keyframes pulse {
    0% {
      opacity: 0.1;
      transform: scale(0.9) translate(0, 0);
    }
    50% {
      opacity: 0.3;
      transform: scale(1.1) translate(5%, 5%);
    }
    100% {
      opacity: 0.1;
      transform: scale(0.9) translate(0, 0);
    }
  }
  
  #about-section {
    transition: background 0.3s ease;
    background-size: 200% 200%;
    background-position: 0% 0%;
  }
  
  #about-section:hover {
    background: linear-gradient(to right bottom, rgba(59, 130, 246, 0.1), rgba(147, 51, 234, 0.1));
    background-size: 200% 200%;
    background-position: 100% 100%;
  }

  /* Dark mode hover effect */
  .dark #about-section:hover {
    background: linear-gradient(to right bottom, rgba(59, 130, 246, 0.2), rgba(147, 51, 234, 0.2));
    background-size: 200% 200%;
    background-position: 100% 100%;
  }
  
  @keyframes pulse-slow {
    0%, 100% {
      opacity: 0.3;
      transform: scale(1);
    }
    50% {
      opacity: 0.5;
      transform: scale(1.05);
    }
  }
  
  .animate-pulse-slow {
    animation: pulse-slow 3s ease-in-out infinite;
    will-change: transform, opacity;
  }
</style>
